{"ast":null,"code":"export const BASE_URL = \"https://auth.nomoreparties.co\";\nexport const register = (password, email) => {\n  return fetch(`${BASE_URL}/signup`, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify({\n      password,\n      email\n    })\n  }).then(response => {\n    return response.json();\n  });\n};\nexport const authorize = (password, email) => {\n  return fetch(`${BASE_URL}/signin`, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify({\n      password,\n      email\n    })\n  }).then(response => response.json()).then(data => {\n    if (data.jwt) {\n      localStorage.setItem(\"jwt\", data.jwt);\n      return data;\n    }\n  });\n};\nexport const getContent = token => {\n  return fetch(`${BASE_URL}/users/me`, {\n    method: \"GET\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n      Authorization: `Bearer ${token}`\n    }\n  }).then(res => res.json()).then(data => data);\n};","map":{"version":3,"names":["BASE_URL","register","password","email","fetch","method","headers","body","JSON","stringify","then","response","json","authorize","data","jwt","localStorage","setItem","getContent","token","Authorization","res"],"sources":["/Users/michaelsilkov/Desktop/YP sprint 12/react-mesto-auth/mesto/src/utils/auth.js"],"sourcesContent":["export const BASE_URL = \"https://auth.nomoreparties.co\";\n\nexport const register = (password, email) => {\n\treturn fetch(`${BASE_URL}/signup`, {\n\t\tmethod: \"POST\",\n\t\theaders: {\n\t\t\t\"Content-Type\": \"application/json\",\n\t\t},\n\t\tbody: JSON.stringify({ password, email }),\n\t}).then((response) => {\n\t\treturn response.json();\n\t});\n};\n\nexport const authorize = (password, email) => {\n\treturn fetch(`${BASE_URL}/signin`, {\n\t\tmethod: \"POST\",\n\t\theaders: {\n\t\t\t\"Content-Type\": \"application/json\",\n\t\t},\n\t\tbody: JSON.stringify({ password, email }),\n\t})\n\t\t.then((response) => response.json())\n\t\t.then((data) => {\n\t\t\tif (data.jwt) {\n\t\t\t\tlocalStorage.setItem(\"jwt\", data.jwt);\n\t\t\t\treturn data;\n\t\t\t}\n\t\t});\n};\n\nexport const getContent = (token) => {\n\treturn fetch(`${BASE_URL}/users/me`, {\n\t\tmethod: \"GET\",\n\t\theaders: {\n\t\t\t\"Content-Type\": \"application/json\",\n\t\t\tAuthorization: `Bearer ${token}`,\n\t\t},\n\t})\n\t\t.then((res) => res.json())\n\t\t.then((data) => data);\n};\n"],"mappings":"AAAA,OAAO,MAAMA,QAAQ,GAAG,+BAA+B;AAEvD,OAAO,MAAMC,QAAQ,GAAG,CAACC,QAAQ,EAAEC,KAAK,KAAK;EAC5C,OAAOC,KAAK,CAAE,GAAEJ,QAAS,SAAQ,EAAE;IAClCK,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MACR,cAAc,EAAE;IACjB,CAAC;IACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;MAAEP,QAAQ;MAAEC;IAAM,CAAC;EACzC,CAAC,CAAC,CAACO,IAAI,CAAEC,QAAQ,IAAK;IACrB,OAAOA,QAAQ,CAACC,IAAI,EAAE;EACvB,CAAC,CAAC;AACH,CAAC;AAED,OAAO,MAAMC,SAAS,GAAG,CAACX,QAAQ,EAAEC,KAAK,KAAK;EAC7C,OAAOC,KAAK,CAAE,GAAEJ,QAAS,SAAQ,EAAE;IAClCK,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MACR,cAAc,EAAE;IACjB,CAAC;IACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;MAAEP,QAAQ;MAAEC;IAAM,CAAC;EACzC,CAAC,CAAC,CACAO,IAAI,CAAEC,QAAQ,IAAKA,QAAQ,CAACC,IAAI,EAAE,CAAC,CACnCF,IAAI,CAAEI,IAAI,IAAK;IACf,IAAIA,IAAI,CAACC,GAAG,EAAE;MACbC,YAAY,CAACC,OAAO,CAAC,KAAK,EAAEH,IAAI,CAACC,GAAG,CAAC;MACrC,OAAOD,IAAI;IACZ;EACD,CAAC,CAAC;AACJ,CAAC;AAED,OAAO,MAAMI,UAAU,GAAIC,KAAK,IAAK;EACpC,OAAOf,KAAK,CAAE,GAAEJ,QAAS,WAAU,EAAE;IACpCK,MAAM,EAAE,KAAK;IACbC,OAAO,EAAE;MACR,cAAc,EAAE,kBAAkB;MAClCc,aAAa,EAAG,UAASD,KAAM;IAChC;EACD,CAAC,CAAC,CACAT,IAAI,CAAEW,GAAG,IAAKA,GAAG,CAACT,IAAI,EAAE,CAAC,CACzBF,IAAI,CAAEI,IAAI,IAAKA,IAAI,CAAC;AACvB,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}