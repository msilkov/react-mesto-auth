{"ast":null,"code":"export const BASE_URL = \"https://auth.nomoreparties.co\";\nexport const register = (password, email) => {\n  return fetch(`${BASE_URL}/signup`, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify({\n      password,\n      email\n    })\n  }).then(response => {\n    return response.json();\n  });\n};\nexport const authorize = (identifier, password) => {\n  return fetch(`${BASE_URL}/auth/local`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      identifier,\n      password\n    })\n  }).then(response => response.json()).then(data => {\n    if (data.jwt) {\n      localStorage.setItem('jwt', data.jwt);\n      return data;\n    }\n  }).catch(err => console.log(err));\n};\nexport const getContent = token => {\n  return fetch(`${BASE_URL}/users/me`, {\n    method: 'GET',\n    headers: {\n      'Accept': 'application/json',\n      'Content-Type': 'application/json',\n      'Authorization': `Bearer ${token}`\n    }\n  }).then(res => res.json()).then(data => data);\n};","map":{"version":3,"names":["BASE_URL","register","password","email","fetch","method","headers","body","JSON","stringify","then","response","json","authorize","identifier","data","jwt","localStorage","setItem","catch","err","console","log","getContent","token","res"],"sources":["/Users/michaelsilkov/Desktop/YP sprint 12/react-mesto-auth/mesto/src/utils/auth.js"],"sourcesContent":["export const BASE_URL = \"https://auth.nomoreparties.co\";\n\nexport const register = (password, email) => {\n\treturn fetch(`${BASE_URL}/signup`, {\n\t\tmethod: \"POST\",\n\t\theaders: {\n\t\t\t\"Content-Type\": \"application/json\",\n\t\t},\n\t\tbody: JSON.stringify({\n\t\t\tpassword,\n\t\t\temail,\n\t\t}),\n\t})\n\t\t.then((response) => {\n\t\t\treturn response.json();\n\t\t})\n\t\t \n};\n\nexport const authorize = (identifier, password) => {\n  return fetch(`${BASE_URL}/auth/local`, {\n    method: 'POST',\n    headers: {\n      \n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({identifier, password})\n  })\n  .then((response => response.json()))\n  .then((data) => {\n    if (data.jwt){\n      localStorage.setItem('jwt', data.jwt);\n      return data;\n    }\n  })\n  .catch(err => console.log(err))\n}; \n\nexport const getContent = (token) => {\n  return fetch(`${BASE_URL}/users/me`, {\n    method: 'GET',\n    headers: {\n      'Accept': 'application/json',\n      'Content-Type': 'application/json',\n      'Authorization': `Bearer ${token}`,\n    }\n  })\n  .then(res => res.json())\n  .then(data => data)\n} "],"mappings":"AAAA,OAAO,MAAMA,QAAQ,GAAG,+BAA+B;AAEvD,OAAO,MAAMC,QAAQ,GAAG,CAACC,QAAQ,EAAEC,KAAK,KAAK;EAC5C,OAAOC,KAAK,CAAE,GAAEJ,QAAS,SAAQ,EAAE;IAClCK,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MACR,cAAc,EAAE;IACjB,CAAC;IACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;MACpBP,QAAQ;MACRC;IACD,CAAC;EACF,CAAC,CAAC,CACAO,IAAI,CAAEC,QAAQ,IAAK;IACnB,OAAOA,QAAQ,CAACC,IAAI,EAAE;EACvB,CAAC,CAAC;AAEJ,CAAC;AAED,OAAO,MAAMC,SAAS,GAAG,CAACC,UAAU,EAAEZ,QAAQ,KAAK;EACjD,OAAOE,KAAK,CAAE,GAAEJ,QAAS,aAAY,EAAE;IACrCK,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MAEP,cAAc,EAAE;IAClB,CAAC;IACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;MAACK,UAAU;MAAEZ;IAAQ,CAAC;EAC7C,CAAC,CAAC,CACDQ,IAAI,CAAEC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,EAAE,CAAE,CACnCF,IAAI,CAAEK,IAAI,IAAK;IACd,IAAIA,IAAI,CAACC,GAAG,EAAC;MACXC,YAAY,CAACC,OAAO,CAAC,KAAK,EAAEH,IAAI,CAACC,GAAG,CAAC;MACrC,OAAOD,IAAI;IACb;EACF,CAAC,CAAC,CACDI,KAAK,CAACC,GAAG,IAAIC,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC,CAAC;AACjC,CAAC;AAED,OAAO,MAAMG,UAAU,GAAIC,KAAK,IAAK;EACnC,OAAOpB,KAAK,CAAE,GAAEJ,QAAS,WAAU,EAAE;IACnCK,MAAM,EAAE,KAAK;IACbC,OAAO,EAAE;MACP,QAAQ,EAAE,kBAAkB;MAC5B,cAAc,EAAE,kBAAkB;MAClC,eAAe,EAAG,UAASkB,KAAM;IACnC;EACF,CAAC,CAAC,CACDd,IAAI,CAACe,GAAG,IAAIA,GAAG,CAACb,IAAI,EAAE,CAAC,CACvBF,IAAI,CAACK,IAAI,IAAIA,IAAI,CAAC;AACrB,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}