{"ast":null,"code":"export const BASE_URL = \"https://auth.nomoreparties.co\";\nconst request = _ref => {\n  let {\n    url,\n    method = \"POST\",\n    token,\n    data\n  } = _ref;\n  return fetch(`${BASE_URL}${url}`, {\n    method,\n    headers: {\n      \"Content-Type\": \"application/json\",\n      ...(!!token && {\n        'Authorization': `Bearer ${token}`\n      })\n    },\n    ...(!!data && {\n      body: JSON.stringify(data)\n    })\n  }).then(res => {\n    if (res.ok) {\n      return res.json();\n    }\n    return Promise.reject(res.status);\n  });\n};\nexport const register = (password, email) => {\n  return request({\n    url: \"/signup\",\n    data: {\n      password,\n      email\n    }\n  });\n};\nexport const authorize = (password, email) => {\n  return request({\n    url: \"/signin\",\n    data: {\n      password,\n      email\n    }\n  });\n};\nexport const getContent = token => {\n  return request({\n    url: \"/users/me\",\n    method: \"GET\",\n    token\n  });\n};","map":{"version":3,"names":["BASE_URL","request","url","method","token","data","fetch","headers","body","JSON","stringify","then","res","ok","json","Promise","reject","status","register","password","email","authorize","getContent"],"sources":["/Users/michaelsilkov/Desktop/YP sprint 12/react-mesto-auth/mesto/src/utils/auth.js"],"sourcesContent":["export const BASE_URL = \"https://auth.nomoreparties.co\";\n\nconst request = ({ url, method = \"POST\", token, data }) => {\n\treturn fetch(`${BASE_URL}${url}`, {\n\t\tmethod,\n\t\theaders: {\n\t\t\t\"Content-Type\": \"application/json\",\n\t\t\t...(!!token && { 'Authorization': `Bearer ${token}` }),\n\t\t},\n\t\t...(!!data && { body: JSON.stringify(data) }),\n\t}).then((res) => {\n\t\tif (res.ok) {\n\t\t\treturn res.json();\n\t\t}\n\t\treturn Promise.reject(res.status);\n\t});\n};\n\nexport const register = (password, email) => {\n\treturn request({\n\t\turl: \"/signup\",\n\t\tdata: { password, email },\n\t});\n};\n\nexport const authorize = (password, email) => {\n\treturn request({\n\t\turl: \"/signin\",\n\t\tdata: { password, email },\n\t});\n};\n\nexport const getContent = (token) => {\n\treturn request({\n\t\turl: \"/users/me\",\n\t\tmethod: \"GET\",\n\t\ttoken,\n\t});\n};\n"],"mappings":"AAAA,OAAO,MAAMA,QAAQ,GAAG,+BAA+B;AAEvD,MAAMC,OAAO,GAAG,QAA2C;EAAA,IAA1C;IAAEC,GAAG;IAAEC,MAAM,GAAG,MAAM;IAAEC,KAAK;IAAEC;EAAK,CAAC;EACrD,OAAOC,KAAK,CAAE,GAAEN,QAAS,GAAEE,GAAI,EAAC,EAAE;IACjCC,MAAM;IACNI,OAAO,EAAE;MACR,cAAc,EAAE,kBAAkB;MAClC,IAAI,CAAC,CAACH,KAAK,IAAI;QAAE,eAAe,EAAG,UAASA,KAAM;MAAE,CAAC;IACtD,CAAC;IACD,IAAI,CAAC,CAACC,IAAI,IAAI;MAAEG,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACL,IAAI;IAAE,CAAC;EAC7C,CAAC,CAAC,CAACM,IAAI,CAAEC,GAAG,IAAK;IAChB,IAAIA,GAAG,CAACC,EAAE,EAAE;MACX,OAAOD,GAAG,CAACE,IAAI,EAAE;IAClB;IACA,OAAOC,OAAO,CAACC,MAAM,CAACJ,GAAG,CAACK,MAAM,CAAC;EAClC,CAAC,CAAC;AACH,CAAC;AAED,OAAO,MAAMC,QAAQ,GAAG,CAACC,QAAQ,EAAEC,KAAK,KAAK;EAC5C,OAAOnB,OAAO,CAAC;IACdC,GAAG,EAAE,SAAS;IACdG,IAAI,EAAE;MAAEc,QAAQ;MAAEC;IAAM;EACzB,CAAC,CAAC;AACH,CAAC;AAED,OAAO,MAAMC,SAAS,GAAG,CAACF,QAAQ,EAAEC,KAAK,KAAK;EAC7C,OAAOnB,OAAO,CAAC;IACdC,GAAG,EAAE,SAAS;IACdG,IAAI,EAAE;MAAEc,QAAQ;MAAEC;IAAM;EACzB,CAAC,CAAC;AACH,CAAC;AAED,OAAO,MAAME,UAAU,GAAIlB,KAAK,IAAK;EACpC,OAAOH,OAAO,CAAC;IACdC,GAAG,EAAE,WAAW;IAChBC,MAAM,EAAE,KAAK;IACbC;EACD,CAAC,CAAC;AACH,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}